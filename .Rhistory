setwd("/Users/promisinganuj/Data/Technical/R Language/RepData_PeerAssessment1")
activity <- read.csv(unz("activity.zip", "activity.csv"), header=TRUE)
library(dplyr)
activity.final.bydate <- group_by(activity.final, date)
activity.byinterval <- group_by(activity, interval)
activity.byinterval.mean <- summarise(activity.byinterval, avg.no.of.steps = mean(steps, na.rm =TRUE))
activity.merged <- merge(activity, activity.byinterval.mean)
activity.merged <- transform(activity.merged, steps = ifelse(is.na(steps), round(avg.no.of.steps), steps))
activity.final <- activity.merged[,c(1:3)]
activity.final.bydate <- group_by(activity.final, date)
activity.final.bydate.sum <- summarise(activity.final.bydate, no.of.steps=sum(steps, na.rm=TRUE))
mean.final.no.of.steps <- mean(activity.final.bydate.sum$no.of.steps)
median.final.no.of.steps <- median(activity.final.bydate.sum$no.of.steps)
View(activity.final.bydate)
View(activity.final.bydate)
View(activity.final)
View(activity.final)
activity.final[day.type] <- activity.final[weekday(activity.final$date)]
activity.final[day.type] <- activity.final[weekdays(activity.final$date)]
activity.final[day.type] <- activity.final[weekdays(as.Date(activity.final$date))]
View(activity.final.bydate)
View(activity.final.bydate)
View(activity.final)
View(activity.final)
activity.final[day.type] <- activity.final[weekdays(as.Date(activity.final$date))]
activity.final$date
as.Date(activity.final$date)
activity.final[day.type] <- activity.final[weekdays(as.Date(activity.final$date))]
activity.final$day.type <- activity.final[weekdays(as.Date(activity.final$date))]
activity.final$day.type <- weekdays(as.Date(activity.final$date))
View(activity.final)
View(activity.final)
activity.final$day.type <- ifelse(weekdays(as.Date(activity.final$date)) in c("Saturday", "Sunday"), "weekend", "weekday")
activity.final$day.type <- ifelse(weekdays(as.Date(activity.final$date)) = c("Saturday", "Sunday"), "weekend", "weekday")
activity.final$day.type <- ifelse(weekdays(as.Date(activity.final$date)) == c("Saturday", "Sunday"), "weekend", "weekday")
View(activity.final)
View(activity.final)
activity.final$day.type <- ifelse(weekdays(as.Date(activity.final$date)) %in% c("Saturday", "Sunday"), "weekend", "weekday")
View(activity.final)
View(activity.final)
?filter()
activity.weekend <- filter(activity.final, day.type = "weekend")
activity.weekend <- filter(activity.final, day.type == "weekend")
activity.weekday <- filter(activity.final, day.type == "weekday")
activity.weekend.byinterval <- group_by(activity.weekend, interval)
activity.weekday.byinterval <- group_by(activity.weekday, interval)
activity.weekend.byinterval.mean <- summarise(activity.weekend.byinterval, avg.no.of.steps = mean(steps, na.rm =TRUE))
activity.weekday.byinterval.mean <- summarise(activity.weekday.byinterval, avg.no.of.steps = mean(steps, na.rm =TRUE))
par(mfrow=c(2,1))
with(activity.weekend.byinterval.mean, plot(interval, avg.no.of.steps, type="l", xlab = "Interval", ylab = "Number of steps", main = "weekend"))
with(activity.weekend.byinterval.mean, plot(interval, avg.no.of.steps, type="l", xlab = "Interval", ylab = "Number of steps", main = "weekday"))
par(mfrow=c(2,1))
with(activity.weekend.byinterval.mean, plot(interval, avg.no.of.steps, type="l", xlab = "Interval", ylab = "Number of steps", main = "weekend"))
with(activity.weekday.byinterval.mean, plot(interval, avg.no.of.steps, type="l", xlab = "Interval", ylab = "Number of steps", main = "weekday"))
activity.final$day.type <- ifelse(weekdays(as.Date(activity.final$date)) %in% c("Saturday", "Sunday"), "weekend", "weekday")
activity.byinterval <- group_by(activity.weekend, interval, day.type)
activity.byinterval.mean <- summarise(activity.byinterval, avg.no.of.steps = mean(steps, na.rm =TRUE))
View(activity.byinterval.mean)
View(activity.byinterval.mean)
View(activity.final)
activity.byinterval <- group_by(activity.final, interval, day.type)
View(activity.byinterval.mean)
View(activity.byinterval.mean)
View(activity.byinterval)
View(activity.byinterval)
activity.byinterval.mean <- summarise(activity.byinterval, avg.no.of.steps = mean(steps, na.rm =TRUE))
View(activity.byinterval.mean)
ggplot(activity.byinterval.mean, aes(interval, steps)) +
geom_line() +
facet_grid(day.type ~ .) +
xlab("Interval") +
ylab("Avarage number of steps")
library(ggplot2)
library(ggplot)
ggplot(activity.byinterval.mean, aes(interval, steps)) +
geom_line() +
facet_grid(day.type ~ .) +
xlab("Interval") +
ylab("Avarage number of steps")
ggplot(activity.byinterval.mean, aes(interval, avg.no.of.steps)) +
geom_line() +
facet_grid(day.type ~ .) +
xlab("Interval") +
ylab("Avarage number of steps")
?ggplot
ggplot(activity.byinterval.mean, aes(interval, avg.no.of.steps)) +
geom_line() +
facet_grid(day.type ~ .) +
colour = day.type
xlab("Interval") +
ylab("Avarage number of steps")
ggplot(activity.byinterval.mean, aes(interval, avg.no.of.steps)) +
geom_line() +
facet_grid(day.type ~ .) +
colour = day.type +
xlab("Interval") +
ylab("Avarage number of steps")
ggplot(activity.byinterval.mean, aes(interval, avg.no.of.steps)) +
geom_line() +
facet_grid(day.type ~ .) +
colour = 'red' +
xlab("Interval") +
ylab("Avarage number of steps")
ggplot(activity.byinterval.mean, aes(interval, avg.no.of.steps)) +
geom_line() +
facet_grid(day.type ~ .) +
xlab("Interval") +
ylab("Avarage number of steps")
str(activity.final)
activity.merged <- transform(activity.merged, steps = as.Factor(ifelse(is.na(steps), round(avg.no.of.steps), steps)))
activity.merged <- transform(activity.merged, steps = as.factor(ifelse(is.na(steps), round(avg.no.of.steps), steps)))
